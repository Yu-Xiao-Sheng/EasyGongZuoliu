<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yg.dao.ApplicationMapper">
    <insert id="save" parameterType="application">
        insert into application_inf values (null, #{attend.id},
        #{reason},false,#{type.id});
    </insert>
    <update id="update" parameterType="application">
        update application_inf set attend_id = #{attend.id},
        app_reason = #{reason},app_result = #{result},type_id = #{type.id}
        where app_id = #{id}
    </update>

    <!--  使用多表连接查询  -->
    <select id="get" resultMap="applicationMap">
        select app.*, type.*
        from application_inf app
        join attend_inf attend
        on app.attend_id = attend.attend_id
        join attend_type_inf type
        on app.type_id = type.type_id
        where app.app_id = #{id}
    </select>

    <!--  使用多表连接查询  -->
    <select id="findByEmp" resultMap="applicationMap">
        select app.*, type.*
        from application_inf app
        join attend_inf attend
        on app.attend_id = attend.attend_id
        join attend_type_inf type
        on app.type_id = type.type_id
        where attend.emp_id = #{id}
    </select>

    <resultMap id="applicationMap" type="application">
        <!--    将app_id、app_reason、app_result映射到Application实体的属性    -->
        <id column="app_id" property="id"/>
        <result column="app_reason" property="reason"/>
        <result column="app_result" property="result"/>
        <!--    隐射关联实体    -->
        <association property="attend" javaType="attend" column="attend_id"
                     select="com.yg.dao.AttendMapper.get" fetchType="lazy"/>
        <association property="type" javaType="attendType"
                     resultMap="com.yg.dao.AttendTypeMapper.typeMap"/>
        <!--  开启默认的二级缓存  -->
    </resultMap>

    <cache/>
</mapper>